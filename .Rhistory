}
for(i in 1:4){
plot(init_data$theta.list[,i], apply(init_data$X,c(1,2),sd), pch = 20)
}
xNames = c("delta","p1","p2","tau")
for(i in 1:4){
plot(init_data$theta.list_s[,i], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = xNames[i],ylab = "Mean")
}
for(i in 1:4){
plot(init_data$theta.list.s[,i], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = xNames[i],ylab = "Mean")
}
for(i in 1:4){
plot(init_data$theta.list.s[,i], apply(init_data$X,c(1,2),sd), pch = 20,
xlab = xNames[i],ylab = "Sd")
}
X.fit <- as.matrix(log10(.8) + 1,cbind(expand.grid(seq(0,1,len=10),seq(0,1,len=10)),(4-0.1)/13.2), ncol =2)
y.fit <- predict(gpfit,X.fit)
cbind(log10(.8) + 1,expand.grid(seq(0,1,len=10),seq(0,1,len=10)),(4-0.1)/13.2)
X.fit <- as.matrix(cbind(log10(.8) + 1,expand.grid(seq(0,1,len=10),seq(0,1,len=10)),(4-0.1)/13.2), ncol =4)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10))
points((2+log10(5))/6,0.5,col = "green", pch = "cross")
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, X.fit[,2],0.9/13.2)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "t","p2")
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "t",
ylab = "p2")
points(log10(.8) + 1, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(log10(.8) + 1, (2+log10(5))/6, X.fit[,2], X.fit[,1])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "tau",
ylab = "p2")
points(3.9/13.2, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, 0.5, X.fit[,2])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "delta",
ylab = "tau")
points((log10(.8) + 1,3.9/13.2,col = "green", pch = 4)
points(log10(.8) + 1,3.9/13.2,col = "green", pch = 4)
## ----------------- Mean and sd ---------------------
y = apply(init_data$X,c(1,2),mean)
## ----------------- Mean and sd ---------------------
y = apply(init_data$X,c(1,2),sd)
X = init_data$theta.list.s
gpfit <- mleHomGP(X,y,lower =c(0.1,0.1,0.1,0.1), upper = c(4,4,4,4), init = list(theta_init = c(1,1,1,1)))
gpfit
X.fit <- as.matrix(cbind(log10(.8) + 1,expand.grid(seq(0,1,len=10),seq(0,1,len=10)),(4-0.1)/13.2), ncol =4)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "p1",
ylab = "p2"))
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "p1",
ylab = "p2")
points((2+log10(5))/6,0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, X.fit[,2],0.9/13.2)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "delta",
ylab = "p2")
points(log10(.8) + 1, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(log10(.8) + 1, (2+log10(5))/6, X.fit[,2], X.fit[,1])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "tau",
ylab = "p2")
points(3.9/13.2, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, 0.5, X.fit[,2])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "delta",
ylab = "tau")
points(log10(.8) + 1,3.9/13.2,col = "green", pch = 4)
init_data <- readMat('init1.mat')
init_data$initTime
init_data$initTime/60
size(init_data$theta.list)
dim(init_data$theta.list)
init_data <- readMat('init1.mat')
sample <- readMat("sample.mat")
init_data <- readMat('init_final.mat')
dim(init_data$theta.list)
init_data <- readMat('init1.mat')
plot(init_data$theta.list[,2], apply(init_data$X,c(1,2),sd))
plot(init_data$theta.list[,1], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "Delta", ylab = "Mean")
par(frow = c(1,2))
plot(init_data$theta.list[,1], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "Delta", ylab = "Mean")
par(mfrow = c(1,2))
plot(init_data$theta.list[,1], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "Delta", ylab = "Mean")
plot(init_data$theta.list[,2], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "P", ylab = "Mean")
abline(v = log10(0.8))
plot(init_data$theta.list[,1], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "Delta", ylab = "Mean")
abline(v = log10(0.8))
plot(init_data$theta.list[,2], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "P", ylab = "Mean")
abline(v = -6)
plot(init_data$theta.list[,1], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "Delta", ylab = "Mean")
abline(v = log10(0.8),col = "red")
plot(init_data$theta.list[,2], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = "P", ylab = "Mean")
abline(v = -6, col = "red")
plot(init_data$theta.list[,1], apply(init_data$X,c(1,2),sd), pch = 20,
xlab = "Delta", ylab = "Standard deviation")
abline(v = log10(0.8),col = "red")
plot(init_data$theta.list[,2], apply(init_data$X,c(1,2),sd), pch = 20,
xlab = "P", ylab = "Standard deviation")
abline(v = -6, col = "red")
## ----------------- Mean ---------------------
y = apply(init_data$X,c(1,2),mean)
X = init_data$theta.list.s
gpfit <- mleHomGP(X,y,lower =c(0.1,0.1), upper = c(4,4), init = list(theta_init = c(1,1)))
par(mfrow = c(1,1))
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "Delta",
ylab = "P")
points(1+log10(0.8), 0.5, col="green", pch = 4)
par(mfrow = c(1,2))
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "Delta",
ylab = "P", main = "Mean")
points(1+log10(0.8), 0.5, col="green", pch = 4)
## ----------------- sd ---------------------
y = apply(init_data$X,c(1,2),sd)
X = init_data$theta.list.s
gpfit <- mleHomGP(X,y,lower =c(0.1,0.1), upper = c(4,4), init = list(theta_init = c(1,1)))
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "Delta",
ylab = "P", main = "Standard deviation")
points(1+log10(0.8), 0.5, col="green", pch = 4)
sample <- readMat("sample.mat")
plot(sample$Sample[,2], pch = 20)
plot(sample$Sample[,1], pch = 20, type = "l", xlab = "Steps", ylab = "Delta")
plot(sample$Sample[,1], pch = 20, type = "l", xlab = "Steps", ylab = "Delta")
plot(sample$Sample[,2], pch = 20, type = "l", xlab = "Steps", ylab = "P")
sum(diff(sample$Sample[5000:10000,1]) !=0)/5000
sum(diff(sample$Sample[5001:10000,1]) !=0)/5000
res <- sample$Sample[5001:1000,]
res <- data.frame(res)
colMeans(res)
log10(0.8)
apply(res,2,sd)
apply(res,2,quantile, c(0.025, 0.5, 0.975))
ggplot(res, aes(x=10^x, y=y) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^x, y = y), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = -6, col = "red", shape = "cross")+
theme(
legend.position='none'
)
names(res) <- c("x","y")
head(res)
apply(res,2,quantile, c(0.025,0.975))
ggplot(res, aes(x=10^x, y=y) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^x, y = y), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = -6, col = "red", shape = "cross")+
theme(
legend.position='none'
)
ggplot(res, aes(x=10^x, y=y) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^x, y = y), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = -6, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("Delta")+
ylab("P")
ggplot(res, aes(x = 10^x)) +
geom_histogram()
ggplot(res, aes(x = 10^x)) +
geom_histogram()+
geom_vline(x = 0.8, col = "red")
ggplot(res, aes(x = 10^x)) +
geom_histogram()+
geom_vline(aes(x = 0.8, col = "red"))
ggplot(res, aes(x = 10^x)) +
geom_histogram()+
geom_vline(0.8, col = "red")
ggplot(res, aes(x = 10^x)) +
geom_histogram()+
geom_vline(xintercept = 0.8, col = "red")
ggplot(res, aes(x = 10^x)) +
geom_histogram()+
geom_vline(xintercept = 0.8, col = "red") +
theme_bw()
ggplot(res, aes(x = 10^x)) +
geom_histogram()+
geom_vline(xintercept = 0.8, col = "red") +
theme_classic()
ggplot(res, aes(x = 10^x)) +
geom_histogram(bins = 20)+
geom_vline(xintercept = 0.8, col = "red") +
theme_classic()
ggplot(res, aes(x = 10^x)) +
geom_histogram(bins = 15)+
geom_vline(xintercept = 0.8, col = "red") +
theme_classic()
ggplot(res, aes(x = 10^x)) +
geom_histogram(aes(y = stat(density)), bins = 15)+
geom_vline(xintercept = 0.8, col = "red") +
theme_classic()+xlab(NULL)
ggplot(res, aes(y = y)) +
geom_histogram(aes(x = stat(density)), bins = 15)+
geom_vline(yintercept = -6, col = "red") +
theme_classic()+xlab(NULL)
ggplot(res, aes(y = y)) +
geom_histogram(aes(x = stat(density)), bins = 15)+
geom_hline(yintercept = -6, col = "red") +
theme_classic()+ylab(NULL)
library(cowplot)
p_2d = ggplot(res, aes(x=10^x, y=y) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^x, y = y), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = -6, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("Delta")+
ylab("P")
p_delta <- ggplot(res, aes(x = 10^x)) +
geom_histogram(aes(y = stat(density)), bins = 15)+
geom_vline(xintercept = 0.8, col = "red") +
theme_classic()+xlab(NULL)
p_delta <- ggplot(res, aes(y = y)) +
geom_histogram(aes(x = stat(density)), bins = 15)+
geom_hline(yintercept = -6, col = "red") +
theme_classic()+ylab(NULL)
p_delta <- ggplot(res, aes(x = 10^x)) +
geom_histogram(aes(y = stat(density)), bins = 15)+
geom_vline(xintercept = 0.8, col = "red") +
theme_classic()+xlab(NULL)
p_p <- ggplot(res, aes(y = y)) +
geom_histogram(aes(x = stat(density)), bins = 15)+
geom_hline(yintercept = -6, col = "red") +
theme_classic()+ylab(NULL)
library(ggpubr)
ggarrange(p_delta,p_2d,NULL,p_p)
ggarrange(p_delta,NULL,p_2d, p_p, ncol=2,nrow = 2,widths = c(3,1))
ggarrange(p_delta,NULL,p_2d, p_p, ncol=2,nrow = 2,widths = c(3,1),heights= c(1,3))
ggarrange(p_delta,NULL,p_2d, p_p, ncol=2,nrow = 2,widths = c(3,1),heights= c(1,3),
align = "hv")
init_data <- readMat('init2.mat')
3336/60
par(mfrow=c(2,2))
xNames = c("delta","p1","p2","tau")
for(i in 1:4){
plot(init_data$theta.list.s[,i], apply(init_data$X,c(1,2),mean), pch = 20,
xlab = xNames[i],ylab = "Mean")
}
for(i in 1:4){
plot(init_data$theta.list.s[,i], apply(init_data$X,c(1,2),sd), pch = 20,
xlab = xNames[i],ylab = "Sd")
}
## ----------------- Mean and sd ---------------------
y = apply(init_data$X,c(1,2),mean)
X = init_data$theta.list.s
gpfit <- mleHomGP(X,y,lower =c(0.1,0.1,0.1,0.1), upper = c(4,4,4,4), init = list(theta_init = c(1,1,1,1)))
X.fit <- as.matrix(cbind(log10(.8) + 1,expand.grid(seq(0,1,len=10),seq(0,1,len=10)),(4-0.1)/13.2), ncol =4)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "p1",
ylab = "p2")
points((2+log10(5))/6,0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, X.fit[,2],0.9/13.2)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "delta",
ylab = "p2")
points(log10(.8) + 1, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(log10(.8) + 1, (2+log10(5))/6, X.fit[,2], X.fit[,1])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "tau",
ylab = "p2")
points(3.9/13.2, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, 0.5, X.fit[,2])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "delta",
ylab = "tau")
points(log10(.8) + 1,3.9/13.2,col = "green", pch = 4)
## ----------------- Mean and sd ---------------------
y = apply(init_data$X,c(1,2),sd)
X = init_data$theta.list.s
gpfit <- mleHomGP(X,y,lower =c(0.1,0.1,0.1,0.1), upper = c(4,4,4,4), init = list(theta_init = c(1,1,1,1)))
X.fit <- as.matrix(cbind(log10(.8) + 1,expand.grid(seq(0,1,len=10),seq(0,1,len=10)),(4-0.1)/13.2), ncol =4)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "p1",
ylab = "p2")
points((2+log10(5))/6,0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, X.fit[,2],0.9/13.2)
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "delta",
ylab = "p2")
points(log10(.8) + 1, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(log10(.8) + 1, (2+log10(5))/6, X.fit[,2], X.fit[,1])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "tau",
ylab = "p2")
points(3.9/13.2, 0.5,col = "green", pch = 4)
X.fit <- as.matrix(expand.grid(seq(0,1,len=10),seq(0,1,len=10)), ncol =2)
X.fit <- cbind(X.fit[,1], (2+log10(5))/6, 0.5, X.fit[,2])
y.fit <- predict(gpfit,X.fit)
image(seq(0,1,len=10),seq(0,1,len=10), matrix(y.fit$mean,ncol=10), xlab = "delta",
ylab = "tau")
points(log10(.8) + 1,3.9/13.2,col = "green", pch = 4)
sum(init_data)
sum((init_data$theta.list[,4]-0.1)/13.2 != init_data$theta.list.s[,4])
which((init_data$theta.list[,4]-0.1)/13.2 != init_data$theta.list.s[,4])
init_data$theta.list[1:5,4]
init_data$theta.list.s[1:5,4]
(init_data$theta.list[1:5,4] - 0.1)/13.3
(init_data$theta.list[1:5,4] - 0.1)/13.2
(init_data$theta.list[1:5,4] - 0.1)/13.2 - init_data$theta.list.s
(init_data$theta.list[1:5,4] - 0.1)/13.2 - init_data$theta.list.s[1:5,4]
par(mfrow = c(2,2))
for(i in 1:4){
plot(sample$Sample[,i], pch = 20, type = "l", xlab = "Steps", ylab = varNames[i])
}
sample <- readMat("sample2.mat")
varNames <- c("Delta","P1","P2","Tau")
par(mfrow = c(2,2))
for(i in 1:4){
plot(sample$Sample[,i], pch = 20, type = "l", xlab = "Steps", ylab = varNames[i])
}
burnin = 2000
sum(diff(sample$Sample[(burnin + 1):10000,1]) !=0)/(10000 - burnin)
res <- sample$Sample[(burnin + 1):10000,]
res <- data.frame(res)
colMeans(res)
apply(res,2,quantile, c(0.025, 0.5, 0.975))
names(res) <- c("x","y")
names(res) <- c("delta","p1","p2","tau")
head(res)
apply(res,2,quantile, c(0.025,0.975))
log10(5e-7)
ggplot(res, aes(x=10^delta, y=p1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^delta, y = p1), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = log10(5e-7), col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("Delta")+
ylab("P1")
ggplot(res, aes(x=p1, y=p2) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= p1, y = p2), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(y = -6, x = log10(5e-7), col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("P1")+
ylab("P2")
load("C:/Users/lur5.NIH/Downloads/cairns.foster.data.rda")
carins.foster.data
cairns.foster.data
p_2d_delta_p1 = ggplot(res, aes(x=10^delta, y=p1) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^delta, y = p1), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = log10(5e-7), col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("Delta")+
ylab("P1")
p_2d_p1_p2 = ggplot(res, aes(x=p1, y=p2) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= p1, y = p2), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(y = -6, x = log10(5e-7), col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("P1")+
ylab("P2")
ggplot(res, aes(x=p2, y=tau) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= p2, y = tau), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = -6, x = 4, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("P2")+
ylab("tau")
p_2d_p2_tau = ggplot(res, aes(x=p2, y=tau) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= p2, y = tau), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = -6, y = 4, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("P2")+
ylab("tau")
p_2d_p2_tau
p_2d_delta_tau = ggplot(res, aes(x=10^delta, y=tau) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= p2, y = tau), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = 4, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("Delta")+
ylab("tau")
p_2d_delta_tau
p_2d_delta_tau = ggplot(res, aes(x=10^delta, y=tau) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^delta, y = tau), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = 4, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("Delta")+
ylab("tau")
p_2d_delta_tau
p_2d_p1_tau = ggplot(res, aes(x=p1, y=tau) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= p1, y = tau), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = log10(5e-7), y = 4, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("P1")+
ylab("tau")
p_2d_p1_tau
p_2d_delta_p2 = ggplot(res, aes(x=10^delta, y=p2) ) +
stat_density_2d(aes(fill = ..density..), geom = "raster", contour = FALSE) +
scale_fill_distiller(palette=4, direction=-1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_point(aes(x= 10^delta, y = p2), col = "green", size = 0.8, shape = 1, alpha = 0.5)+
geom_point(x = 0.8, y = -6, col = "red", shape = "cross")+
theme(
legend.position='none'
)+
xlab("Delta")+
ylab("P2")
p_2d_delta_p2
p_delta <- ggplot(res, aes(x = 10^delta)) +
geom_histogram(aes(y = stat(density)), bins = 15)+
geom_vline(xintercept = 0.8, col = "red") +
theme_classic()+xlab(NULL)
log10(1.3e8)
log2(1.3e8)
log2(1.5e8)
log2(1e8)
log2(1e6)
log2(1e6/90)
log2(1e7/90)
p_2d_delta_p1
for(i in 1:4){
plot(sample$Sample[,i], pch = 20, type = "l", xlab = "Steps", ylab = varNames[i])
}
p_2d_p1_p2
p_2d_p2_tau
p_2d_delta_tau
p_2d_p1_tau
p_2d_delta_p2
load("C:/Users/lur5.NIH/Downloads/cairns.foster.data.rda")
cairns.foster.data
